#+title: Publish Roam

This small library publishes org-roam files as HTML pages using pandoc and gsed. If you are not in a MacOS, change to sed.



** Install

Just copy and paste this code on your configs, as long as it is all GPL3.

** Usage

#+begin_src emacs-lisp :exports both :results output 
  (publish-roam-by-tag "math_notes" "~/public_html" "My math notes")
#+end_src

All org roam files with the tag =math_notes= *AND the tag* =publish= will be converted to HTML inside the =~/public_html= (or any dir of your used in the function call).

All the roam files will become =[timestamp].html= inside your =publish-dir=.

An =index.html= will be generated with cards to each page created.

Your =publish-dir= is expected to have:

#+begin_src shell :exports both :results output 
  `-- static
    |-- header.html
    `-- styles.css
#+end_src

The css will be applied to all converted files. =header.html= will insert its content in the =<head></head>= of every html page.

The CSS I'm using:

#+begin_src css :exports both :results output 
  /* https://colorhunt.co/palette/405d72758694f7e7dcfff8f3 */

body {
  display: flex;
  flex-direction: column;
  margin: 0;
  background-color: #fff8f3;
  padding: 20px;
}

header {
  width: 100%;
  margin: 0;
  min-height: 100px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-bottom: 1px solid #f7e7dc;
  margin-bottom: 20px;
}

header h1 {
  margin: 0;
  text-align: center;
}

h1 {
  font-family: "Arsenal SC", sans-serif;
  font-weight: 400;
  font-style: normal;
  color: #405d72;
}

.card-wrapper {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 20px;
  justify-content: space-evenly;
}

.card {
  width: 130px;
  height: 130px;
  border-radius: 20px;
  background-color: #758694;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 10px;
  font-family: sans-serif;
}

a {
  color: inherit;
  text-decoration: inherit;
}

/*********/
/* Table */
/*********/

table {
  width: 100%;
  border-collapse: collapse;
  font-family: sans-serif;
}
/* Zebra striping */
tr:nth-of-type(odd) {
  background: #f7e7dc;
}
th {
  background: #405d72;
  color: white;
  font-weight: bold;
}
td,
th {
  padding: 6px;
  border: 1px solid #fff8f3;
  text-align: left;
}

#+end_src

And the =header.html=

#+begin_src html :exports both :results output 
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=Arsenal+SC:ital,wght@0,400;0,700;1,400;1,700&display=swap"
    rel="stylesheet"
  />

#+end_src
